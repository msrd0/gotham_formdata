(function() {var type_impls = {
"gotham":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PipelineHandleChain%3CP%3E-for-(Handle%3CPipeline%3CT%3E,+N%3E,+U)\" class=\"impl\"><a class=\"src rightside\" href=\"src/gotham/pipeline/chain.rs.html#38-59\">source</a><a href=\"#impl-PipelineHandleChain%3CP%3E-for-(Handle%3CPipeline%3CT%3E,+N%3E,+U)\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;P, T, N, U&gt; <a class=\"trait\" href=\"gotham/pipeline/trait.PipelineHandleChain.html\" title=\"trait gotham::pipeline::PipelineHandleChain\">PipelineHandleChain</a>&lt;P&gt; for (<a class=\"struct\" href=\"borrow_bag/handle/struct.Handle.html\" title=\"struct borrow_bag::handle::Handle\">Handle</a>&lt;<a class=\"struct\" href=\"gotham/pipeline/struct.Pipeline.html\" title=\"struct gotham::pipeline::Pipeline\">Pipeline</a>&lt;T&gt;, N&gt;, U)<span class=\"where fmt-newline\">where\n    T: NewMiddlewareChain,\n    T::Instance: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    U: <a class=\"trait\" href=\"gotham/pipeline/trait.PipelineHandleChain.html\" title=\"trait gotham::pipeline::PipelineHandleChain\">PipelineHandleChain</a>&lt;P&gt;,\n    P: <a class=\"trait\" href=\"borrow_bag/lookup/trait.Lookup.html\" title=\"trait borrow_bag::lookup::Lookup\">Lookup</a>&lt;<a class=\"struct\" href=\"gotham/pipeline/struct.Pipeline.html\" title=\"struct gotham::pipeline::Pipeline\">Pipeline</a>&lt;T&gt;, N&gt;,\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a>,</span></h3></section></summary><div class=\"docblock\"><p>Part of a <code>PipelineHandleChain</code> which references a <code>Pipeline</code> and continues with a tail element.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gotham/pipeline/chain.rs.html#46-58\">source</a><a href=\"#method.call\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"gotham/pipeline/trait.PipelineHandleChain.html#tymethod.call\" class=\"fn\">call</a>&lt;F&gt;(\n    &amp;self,\n    pipelines: &amp;<a class=\"type\" href=\"gotham/pipeline/type.PipelineSet.html\" title=\"type gotham::pipeline::PipelineSet\">PipelineSet</a>&lt;P&gt;,\n    state: <a class=\"struct\" href=\"gotham/state/struct.State.html\" title=\"struct gotham::state::State\">State</a>,\n    f: F\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"type\" href=\"gotham/handler/type.HandlerFuture.html\" title=\"type gotham::handler::HandlerFuture\">HandlerFuture</a>&gt;&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"struct\" href=\"gotham/state/struct.State.html\" title=\"struct gotham::state::State\">State</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"type\" href=\"gotham/handler/type.HandlerFuture.html\" title=\"type gotham::handler::HandlerFuture\">HandlerFuture</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</span></h4></section></summary><div class='docblock'>Invokes this part of the <code>PipelineHandleChain</code>, with requests being passed through to <code>f</code>\nonce all <code>Middleware</code> in the <code>Pipeline</code> have passed the request through.</div></details></div></details>","PipelineHandleChain<P>","gotham::pipeline::single::SinglePipelineChain"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()