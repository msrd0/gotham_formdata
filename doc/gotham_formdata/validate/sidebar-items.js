initSidebarItems({"struct":[["CombinedValidator","This struct combines two validators and only validates its input if both validators pass it."],["ExpectedValidator","A validator that checks that a value is in a list of accepted values."],["MaxLengthValidator","A validator that checks that a string has a maximum length."],["MaxValidator","A validator that checks that an integer is at most of a maximal value."],["MinLengthValidator","A validator that checks that a string has a minimum length."],["MinValidator","A validator that checks that an integer is at least of a minimal value."],["RegexMismatchError","This error is emitted by the [RegexValidator] if the value did not match the regex."],["RegexValidator","A validator that checks that an integer is at least of a minimal value."],["UnexpectedValueError","This error is emitted by the [ExpectedValidator] if an unexpected value was found."],["ValueTooLargeError","This error is emitted by the [MaxValidator] if the value was too large."],["ValueTooLongError","This error is emitted by the [MaxLengthValidator] if the value was too long."],["ValueTooShortError","This error is emitted by the [MinLengthValidator] if the value was too short."],["ValueTooSmallError","This error is emitted by the [MinValidator] if the value was too small."]],"trait":[["Validator","This trait allows data of type `T` to be verified against custom criteria."]]});